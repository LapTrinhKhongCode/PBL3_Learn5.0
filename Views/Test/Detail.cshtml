@model Test
@{
    int soCauhoi=Model.Questions.Count;
    int i=0;
}
<form id="submitTest_Exam" method="post" asp-action="SubmitTest" asp-route-id="@Model.Id" class="container exam">
   <div class="content">
        
            @foreach(var item in Model.Questions){
                int j=0;
                <div class="exam__question" id="exam__question-@(i+1)">
                    <h5 style="color:black;" class="exam__question--text">Câu @(i+1): @Html.Raw(item.QuestionName) </h5>
                </div>
                <div class="exam__answer">
                    @foreach(var ans in item.Answers)
                    {
                        <input type="radio" class="question-title-@i" name="answer[@i]" id="answer-@(i*4+j)" value="@ans.Id">
                        <label for="answer-@(i*4+j)">@ans.AnswerText</label>
                        <br>
                        j++;
                    }
                </div>
                ++i;
            }
        
   </div>
   <div class="time">
        <p class="clock-element"> </p>
        <input type="submit" class="btn-custom" value="Nộp bài">
        <div class="btn-question">
            @for(int j=0;j<soCauhoi;j++)
            {
                <div class="btn-question__detail"><button type="button" id="btn-question-@j" class="btn-question__review time-button" onclick="goToQuestion('exam__question-@(j+1)')">@(j+1)</button></div>
            }
        </div>
   </div>
</form>
<style>
    .exam{
        display:flex;
        justify-content: space-between;
        margin-top: 20px;
        color:black;
        position: relative;
    }
    .content{
        width: 75%;
        padding: 50px;
        box-sizing: border-box;
        border: 1px solid rgb(234, 221, 221);
        border-radius: 20px;
        box-shadow: 0px 0px 33px 0px rgba(0,0,0,0.1);
    }
    .time{
        width: 18%;
        padding: 15px;
        box-sizing: border-box;
        border: 1px solid rgb(234, 221, 221);
        border-radius: 20px;
        color:black;
        font-weight: 600;
        height: 40%;
        position: sticky;
        top:100px;
        right:0;
        z-index: 1;
    }
    .btn-custom{
        display: inline-block;
        color:red;
        margin: 0 auto;
        background-color: #fff;
        border: 1px solid black;
        padding: 5px 30px;
        border-radius: 10px;
    }
    .btn-question{
        display: grid;
        grid-template-columns: 80px 80px 80px;
    }
    .btn-question__detail{
        padding:6px;
    }
    .btn-question__review{
        color:black;
        width: 80%;
        border-radius: 10px;
        background-color: #fff;
    }
</style>

<script>
    function goToQuestion(questionId) {
        var questionElement = document.getElementById(questionId);
        questionElement.scrollIntoView();
    }

    let hours = 0;
    let minutes = @Model.Time;
    let seconds = 1;
    let clockElement = document.querySelector(".clock-element");

    function clock() {
        let prefixMinute = minutes < 10 ? "0" : "";
        let prefixSecond = seconds < 10 ? "0" : "";
        seconds--;
        clockElement.innerHTML = ` Thời gian còn lại: <strong>${prefixMinute}${minutes}:${prefixSecond}${seconds}</strong>`;
        if (hours === 0 && minutes === 0 && seconds === 0) {
            clearInterval(clearClock);
            document.querySelector("#submitTest_Exam").submit();
        }
        if (seconds === 0) {
            if (minutes > 0) {
                seconds = 60;
                minutes--;
            }
        }
        if (minutes === 0) {
            if (hours > 0) {
                hours--;
                minutes = 59;
                seconds = 60;
            }
        }
        localStorage.setItem('minutes'+@Model.Id, minutes);
        localStorage.setItem('seconds'+@Model.Id, seconds);
        
    }

    var clearClock = setInterval(clock, 1000);

    document.querySelector("#submitTest_Exam").onsubmit = function(e) {
        let i = 0;
        let inputRadioElement = document.querySelectorAll(`input[type="radio"]:checked`);
        Array.from(inputRadioElement).forEach(function(input) {
            input.name = `answers[${i}]`;
            ++i;
        });
            
        localStorage.removeItem("minutes"+@Model.Id);
        localStorage.removeItem("seconds"+@Model.Id);
        Object.keys(localStorage).forEach((key)=>{
            if(key.includes("test"+@Model.Id))
            {
                localStorage.removeItem(key);
            }
        })
        
          
    }

    for (let i = 0; i < @Model.Questions.Count; i++) {
        let inputQuestion = document.querySelectorAll(".question-title-" + i);
        inputQuestion.forEach(input => {
            input.onchange = function(e) {
                document.querySelector("#btn-question-" + i).style.backgroundColor = "#1084b0";
                document.querySelector("#btn-question-" + i).style.color = "white";
                document.querySelector("#btn-question-" + i).style.border = "none";
            }
        });
    }
    document.querySelectorAll('input[type="radio"]').forEach(input => {
        input.addEventListener('change', function() {
            localStorage.setItem(this.name+"test"+@Model.Id, this.value);
        });
    });

    window.addEventListener('load', function() {
        document.querySelectorAll('input[type="radio"]').forEach(input => {
            let savedValue = localStorage.getItem(input.name+"test"+@Model.Id);
            if (savedValue && input.value === savedValue) {
                input.checked = true;
            }
        });

        if (localStorage.getItem('minutes'+@Model.Id) !== null && localStorage.getItem('seconds'+@Model.Id) !== null) {
            minutes = Number(localStorage.getItem('minutes'+@Model.Id));
            seconds = Number(localStorage.getItem('seconds'+@Model.Id));
        }

        let prefixMinute = minutes < 10 ? "0" : "";
        let prefixSecond = seconds < 10 ? "0" : "";
        clockElement.innerHTML = ` Thời gian còn lại: <strong>${prefixMinute}${minutes}:${prefixSecond}${seconds}</strong>`; 

        //load button question
        for (let i = 0; i < @Model.Questions.Count; i++) {
        let inputQuestion = document.querySelectorAll(".question-title-" + i);
        inputQuestion.forEach(input => {
            if(input.checked==true) {
                document.querySelector("#btn-question-" + i).style.backgroundColor = "#1084b0";
                document.querySelector("#btn-question-" + i).style.color = "white";
                document.querySelector("#btn-question-" + i).style.border = "none";
            }
        });
    }       
    
    });

    
    
    
</script>
