@using Microsoft.EntityFrameworkCore
@inject AppDbContext _context
@model Users

@{
    int UserId = int.Parse(User.Claims.FirstOrDefault(c => c.Type == "Id")?.Value.ToString());
    var allCourseOfUser = _context.courses.Include(c=>c.chapters).ThenInclude(c=>c.lessons).Where(c => c.TeacherId == UserId).ToList();

    var getCourseUser = (from u in _context.usersCourses
                         join c in _context.courses on u.CourseId equals c.Id
                         where u.UsersId == UserId
                         select c).ToList();
}

<div style="border: 1px solid rgba(43, 37, 37, 0.527); width: 70%; margin: 50px auto 25px;"></div>
<div class="profile">
    <div class="info">
        <form method="post" asp-action="EditUser" asp-route-UsersId="@Model.Id" style="margin: 0 auto;">
            <div asp-validation-summary="All" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Email" class="control-label"></label>
                <input type="text" asp-for="Email" class="form-control">
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="hidden" asp-for="Password" class="form-control" value="@Model.Password">
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input type="text" asp-for="Name" class="form-control">
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Phone" class="control-label"></label>
                <input type="text" asp-for="Phone" class="form-control">
                <span asp-validation-for="Phone" class="text-danger"></span>
            </div>
            <a asp-action="ChangePassword" asp-controller="User" asp-route-id="@Model.Id">Change password</a>
            <hr>
            <input type="submit" class="btn btn-success" value="Lưu thông tin">
        </form>
    </div>

    <div class="courseOfUser">
        <h5 style="margin-bottom: 30px;">My courses</h5>
        <ul>
            @foreach (var item in allCourseOfUser)
            {
                if (item.IsActive == 1)
                {
                    <li><a asp-action="Detail" asp-controller="Course" asp-route-id="@item.Id">@item.CourseName</a></li>
                }
            }
            @foreach (var item in getCourseUser)
            {
                if (item.IsActive == 1)
                {
                    <li>
                        <a asp-action="Detail" asp-controller="Course" asp-route-id="@item.Id">@item.CourseName</a>
                        <span>(Student)</span>
                    </li>
                }
            }
        </ul>
        @if(User.IsInRole("Teacher")){
            <button type="button" class="report-detail-button btn-primary" data-bs-toggle="modal" data-bs-target="#myModal"> 
                View Your Course Statistics
            </button>
        }
        
        <div class="modal fade" id="myModal">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <!-- Modal Header -->
                <div class="modal-header">
                    <h4 class="modal-title">Statistics for teachers</h4>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>

                <!-- Modal Body -->
                <div class="modal-body">
                    @foreach(var course in allCourseOfUser)
                    {
                        var studentIncourse=_context.usersCourses.Where(c=>c.CourseId==course.Id).ToList();
                        var starAvg=studentIncourse.Where(c=>c.rate!=null).Average(c=>c.rate);
                        var totalView=0;
                        var totalTestOfCourse = _context.tests.Include(c=>c.usersTests).Where(c=>c.CourseId==course.Id).ToList();
                        var sumViewTest=0;
                        foreach(var item in course.chapters)
                        {
                            totalView+=item.lessons.Sum(c=>c.View);
                        }
                        <div class="course-info">
                            <h4>Course name: @course.CourseName</h4>
                            <p>Number of students participating: @studentIncourse.Count học viên</p>
                            <p>Average student rating: @starAvg <i class="fa-solid fa-star" style="color:yellow"></i></p>
                            <p>Number of video views: @totalView lượt</p>
                            <ul class="lesson-favourite">
                                    @foreach(var item in course.chapters)
                                    {
                                        if(item.lessons!=null)
                                        {
                                            foreach(var lesson in item.lessons)
                                            {
                                                <li>&nbsp;&nbsp;&nbsp; @lesson.LessonName: @lesson.View views</li>
                                            }
                                        }
                                    }
                            </ul>
                            
                            <p>Details of students' number of homework turns:</p>
                            <ul>
                                @foreach(var item in totalTestOfCourse)
                                {
                                    var viewTest=item.usersTests.Count;

                                    <li>&nbsp;&nbsp;&nbsp; @item.TestName : @viewTest views </li>
                                }
                            </ul>
                        </div>
                    }
                </div>

                <!-- Modal Footer -->
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
        </div>
    </div>
</div>



<div class="container report-detail">
    <!-- Button to Open the Modal -->
    

    <!-- The Modal -->
    
</div>


<style>
    .profile {
        display: flex;
        justify-content: center;
        gap: 140px;
        padding-bottom: 50px;
    }
    .info {
        width: 300px;
    }

    .course-info {
        margin-bottom: 30px;
        border: 1px solid #ccc;
        padding: 15px;
        border-radius: 5px;
    }

    .report-detail-button{
        border-radius: 99px;
        padding: 4px;
    }
</style>




